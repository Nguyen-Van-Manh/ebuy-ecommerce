type SubCollection implements Node {
    _id: ID!
    name: String!
    active: Boolean!
    createdAt: Date
    updatedAt: Date
}

type Collection implements Node {
    _id: ID!
    name: String!
    """
    Each collection can have zero or more subcollection. By default, is 0
    """
    totalSubCollection: Int!
    """
    Array of sub-collections
    """
    subCollections: [SubCollection]
    """
    Collection active or de-active
    """
    active: Boolean!
    createdAt: Date
    updatedAt: Date

}
type ListCollection {
    collections: [Collection]
    totalCollections: Int
}
type Mutation {
    createCollection(name: String!, active: Boolean!, subCollections: [String]): ListCollection
    removeCollection(_id: ID!): ListCollection
    updateCollection(_id: ID!, name: String!, active: Boolean!): ListCollection
    addSubCollection(
        "Collection ID"
        _id: ID!,
        "Sub-Collection name"
        name: String!,
        active: Boolean!
    ): ListCollection
    removeSubCollection(collectionId: ID!, subCollectionId: ID!): ListCollection
    updateSubCollection(name: String!, active: Boolean!): ListCollection
}
type Query {
    getCollections: ListCollection
}